'use client';

import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Link from "next/link";
import { createContext, useState, useContext } from "react";
import { Order } from "../../types/prod";

interface OrdersContextType {
  orders: Order[];
  setOrders: React.Dispatch<React.SetStateAction<Order[]>>;
  id: number,
  setId: React.Dispatch<React.SetStateAction<number>>
}

const OrdersContext = createContext<OrdersContextType | undefined>(undefined);

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export const useOrderContext = () => {
  const context = useContext(OrdersContext);
  if (!context) {
    throw new Error('useOrders must be used within an OrdersProvider');
  }
  return context;
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const [orders, setOrders] = useState<Order[]>([]);
  const [id, setId] = useState(0);

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
      <nav className="bg-gray-600 text-white font-bold flex gap-4 p-4">
        <Link href='/dashboard' className="hover:text-amber-300 hover:shadow-2xs"> Dashboard </Link>
        <Link href='/orders' className="hover:text-amber-300 hover:shadow-2xs"> Order List </Link>
      </nav>
      <OrdersContext.Provider value={{orders, setOrders, id, setId}}>
          {children}
      </OrdersContext.Provider>
      </body>
    </html>
  );
}
